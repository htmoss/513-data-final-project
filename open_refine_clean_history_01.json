[
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "description",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column description using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "description",
		"expression": "value.replace(/\\s+/,' ')",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column description using expression value.replace(/\\s+/,' ')"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "description",
		"expression": "value.replace(\"<br />\",\"\\n\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column description using expression value.replace(\"<br />\",\"\\n\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "description",
		"expression": "value.replace(\"<b>\",\"\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column description using expression value.replace(\"<b>\",\"\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "description",
		"expression": "value.replace(\"</b>\",\"\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column description using expression value.replace(\"</b>\",\"\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "neighborhood_overview",
		"expression": "value.replace(\"<br />\",\"\\n\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column neighborhood_overview using expression value.replace(\"<br />\",\"\\n\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "neighborhood_overview",
		"expression": "value.replace(\"<b>\",\"\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column neighborhood_overview using expression value.replace(\"<b>\",\"\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "neighborhood_overview",
		"expression": "value.replace(\"</b>\",\"\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column neighborhood_overview using expression value.replace(\"</b>\",\"\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "id",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column id using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "last_scraped",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column last_scraped using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "last_scraped",
		"expression": "value.replace(/\\s+/,' ')",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column last_scraped using expression value.replace(/\\s+/,' ')"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "last_scraped",
		"expression": "value.toDate()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column last_scraped using expression value.toDate()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_id",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_id using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_since",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_since using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_since",
		"expression": "value.replace(/\\s+/,' ')",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_since using expression value.replace(/\\s+/,' ')"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_since",
		"expression": "value.toDate()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_since using expression value.toDate()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_name",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_name using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_name",
		"expression": "value.replace(/\\s+/,' ')",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_name using expression value.replace(/\\s+/,' ')"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_about",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_about using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_neighbourhood",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_neighbourhood using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_neighbourhood",
		"expression": "value.toString()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_neighbourhood using expression value.toString()"
	},
	{
		"op": "core/mass-edit",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_neighbourhood",
		"expression": "value",
		"edits": [
			{
				"from": ["Sunland/Tujunga", "Sunland-Tujunga"],
				"fromBlank": false,
				"fromError": false,
				"to": "Sunland-Tujunga"
			},
			{
				"from": ["West Hollywood", "West Hollywood West"],
				"fromBlank": false,
				"fromError": false,
				"to": "West Hollywood"
			}
		],
		"description": "Mass edit cells in column host_neighbourhood"
	},
	{
		"op": "core/mass-edit",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_neighbourhood",
		"expression": "value",
		"edits": [
			{
				"from": ["Mid-City", "Mid City"],
				"fromBlank": false,
				"fromError": false,
				"to": "Mid-City"
			},
			{
				"from": ["Upper West Side", "Upper Westside"],
				"fromBlank": false,
				"fromError": false,
				"to": "Upper West Side"
			}
		],
		"description": "Mass edit cells in column host_neighbourhood"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_neighbourhood",
		"expression": "value.trim()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_neighbourhood using expression value.trim()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_listings_count",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_listings_count using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "host_total_listings_count",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column host_total_listings_count using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "scrape_id",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column scrape_id using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "latitude",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column latitude using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "longitude",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column longitude using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "accommodates",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column accommodates using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "bedrooms",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column bedrooms using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "beds",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column beds using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "minimum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column minimum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "maximum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column maximum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "minimum_minimum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column minimum_minimum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "maximum_minimum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column maximum_minimum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "minimum_maximum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column minimum_maximum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "maximum_maximum_nights",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column maximum_maximum_nights using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "minimum_nights_avg_ntm",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column minimum_nights_avg_ntm using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "maximum_nights_avg_ntm",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column maximum_nights_avg_ntm using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "availability_30",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column availability_30 using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "availability_60",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column availability_60 using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "availability_90",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column availability_90 using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "availability_365",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column availability_365 using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "calendar_last_scraped",
		"expression": "value.toDate()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column calendar_last_scraped using expression value.toDate()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "number_of_reviews",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column number_of_reviews using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "number_of_reviews_ltm",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column number_of_reviews_ltm using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "number_of_reviews_l30d",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column number_of_reviews_l30d using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "first_review",
		"expression": "value.toDate()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column first_review using expression value.toDate()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "last_review",
		"expression": "value.toDate()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column last_review using expression value.toDate()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_rating",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_rating using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_accuracy",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_accuracy using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_cleanliness",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_cleanliness using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_checkin",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_checkin using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_communication",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_communication using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_location",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_location using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "review_scores_value",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column review_scores_value using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "calculated_host_listings_count",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column calculated_host_listings_count using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "calculated_host_listings_count_entire_homes",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column calculated_host_listings_count_entire_homes using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "calculated_host_listings_count_private_rooms",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column calculated_host_listings_count_private_rooms using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "calculated_host_listings_count_shared_rooms",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column calculated_host_listings_count_shared_rooms using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "reviews_per_month",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column reviews_per_month using expression value.toNumber()"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "price",
		"expression": "value.replace(\"$\",\"\")",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column price using expression value.replace(\"$\",\"\")"
	},
	{
		"op": "core/text-transform",
		"engineConfig": {
			"facets": [],
			"mode": "row-based"
		},
		"columnName": "price",
		"expression": "value.toNumber()",
		"onError": "keep-original",
		"repeat": false,
		"repeatCount": 10,
		"description": "Text transform on cells in column price using expression value.toNumber()"
	}
]
